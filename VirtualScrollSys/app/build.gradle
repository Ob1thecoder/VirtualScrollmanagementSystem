/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.VSS'
version = '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot Web for REST API
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot JDBC for database access
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // SQLite JDBC driver for connecting to SQLite database
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    //Changed Database driver to Postgresql
    implementation 'org.postgresql:postgresql:42.6.0'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'

    // Needed to run tests 
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // H2 database for testing
    testImplementation 'com.h2database:h2'
}

// Java toolchain configuration for consistency
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.VSS.App'
}

// Jacoco configuration
jacoco {
    toolVersion = "0.8.10" 
}

// Exclude dynamically generated Gradle classes from the coverage report
jacocoTestReport {
    dependsOn test // Ensure tests run before report generation
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    // Exclude unwanted classes from coverage reports
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/org/gradle/accessors/**'  // Exclude Gradle-generated classes
            ])
        }))
    }
}

// Configure test task to use JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}

// Optional: Display Jacoco report after tests
tasks.named('jacocoTestReport') {
    finalizedBy 'jacocoTestCoverageVerification'
}
